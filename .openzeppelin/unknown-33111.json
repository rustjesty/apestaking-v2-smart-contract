{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xc4a02Ec33987d9051d21e6bB8758D0734B9BE30B",
    "txHash": "0xd721c36d25656e24bd9dacdde9a40eb774ef40d651b30420831bbb696730b339"
  },
  "proxies": [
    {
      "address": "0xdD4d936bAd4a4A89F850D1AF7c98beEA988c07c5",
      "txHash": "0xc6774c455548a32fe0e69ac6151a54224275e70312f8c56b419c63152ba73a74",
      "kind": "transparent"
    },
    {
      "address": "0x5e4cF53c3337199Fce53B67E641a74E11fCcE5FA",
      "txHash": "0x788814c34eb1e2bc57526ff207a7623573fced40106f9a184227ba24351ba9f0",
      "kind": "transparent"
    },
    {
      "address": "0x194E1ec01df347783482d6Bdc9D65D70C9D87961",
      "txHash": "0x47e5ff6205d86f5f73c0f3db219dcc8d8c733c7e7b5463e903ac3a2a73464e14",
      "kind": "transparent"
    },
    {
      "address": "0x248E2D3f5Decf6f7159EcC4C65d5eFbBDd9Be433",
      "txHash": "0xa9c6ad1d862002b263e413fb74b0ca36e1ec91899984f7cc7464ee7bc0d697a8",
      "kind": "transparent"
    },
    {
      "address": "0xbeD1e8B430FD512b82A18cb121a8442F3889E505",
      "txHash": "0x95be5b72869d9420529abbd80fd143b86304055aa260d1ec735fc67674eee931",
      "kind": "transparent"
    },
    {
      "address": "0x317e19Fe3DB508f1A45421379FBbd7564d0259c0",
      "txHash": "0x58dc89339a5cd47057c5cdd3c919a27f5ecece45c532dd8516654d427f90d56d",
      "kind": "transparent"
    },
    {
      "address": "0x578bc56a145A3464Adc44635C23501653138c946",
      "txHash": "0x9ae4030e8495f97351407b710603f6c24569cc78d8932493b304dd8c86b181d2",
      "kind": "transparent"
    },
    {
      "address": "0x55C44d8dDCEaceD2d9a40a1e68Ca3F8bE5E96b91",
      "txHash": "0x170a711a0d7d97fe620f254d296cd7e4a5dc388e439ffabfa9a712c58e4fd97a",
      "kind": "transparent"
    },
    {
      "address": "0xF143144Fb2703C8aeefD0c4D06d29F5Bb0a9C60A",
      "txHash": "0xf9af93824d0c71da19e882910aaf8f93795dca1f6991a24caaba3571f2d5655a",
      "kind": "transparent"
    },
    {
      "address": "0x3CF52C9ce29a1df2adCd0Ce657BbBBB63A3f9D01",
      "txHash": "0x5e38b7a070e994d17578f6b20d77589e55e2c40f83113a75e1433fcff0df1012",
      "kind": "transparent"
    },
    {
      "address": "0x8f91Da151E9FfeaA410419256c30f4608AD85Dc3",
      "txHash": "0x183f3d26c3fad878190a00c58dbcc7fb693bf2815f03aa4962f0ac709b23b638",
      "kind": "transparent"
    },
    {
      "address": "0x19Fc1F11e1BEA5317ce54d97bbf5675a38e2F4a3",
      "txHash": "0xefaf1f694725ba9c5f677e08fc06ab29fa61656c19c017eed86a35921b350d6d",
      "kind": "transparent"
    },
    {
      "address": "0xE8e43e27b32642F3FD44F9d46239fE157Ef160E7",
      "txHash": "0x3d4c92bc45374a989b0ec66c3e226bbba3bae8ad6e50a65fff8c1cb3388e29ed",
      "kind": "transparent"
    },
    {
      "address": "0x1cba0A3e18be7f210713c9AC9FE17955359cC99B",
      "txHash": "0xfd77f87437713d0720bc1e2b3ae860bca5326035a0a79e0c7192ce2f772b28e6",
      "kind": "transparent"
    },
    {
      "address": "0x5221bb8e9Ec407824a851755a753367F3f4e4D24",
      "txHash": "0xe858c553b4a4d3c7e61012310bfc78c6a226062911e0e58462844ed933c73cd9",
      "kind": "transparent"
    },
    {
      "address": "0xB1FB6C0973D97d285ab87b7b235BaEA7f96F5c36",
      "txHash": "0x900cb4d7f09056abf506ba62dfd683730574c375c1f172e53c51ad4309988a96",
      "kind": "transparent"
    },
    {
      "address": "0x3285c31a1aDC8E21E6E6b67bF28a95Bbd1622393",
      "txHash": "0xb2613977e2e3cf9c997d1fb18f8facfc733e02585e0430deeaf88d40be53623c",
      "kind": "transparent"
    },
    {
      "address": "0x1c3A772154D640bbc4879cFdB2C8310a9a8D795E",
      "txHash": "0x1b0729acdd8dc580e06e7485b2e61abc766bd57335a47b800a6301caac8b3393",
      "kind": "transparent"
    },
    {
      "address": "0x97681ECaac2593A0Eee4275E2eEEB82F3b31371f",
      "txHash": "0xd0ae88750af3697adc74558bd45ecf502a7ae0519ea3fcf3d1e6c73f50303e5a",
      "kind": "transparent"
    },
    {
      "address": "0x3BDc9DeD2a895Afbf43F7AD99CDb13D6f95E6f83",
      "txHash": "0x03614f336e732df077b9c4cf39ac8ed23be9a18e2e3a42441d715e25752cb5b6",
      "kind": "transparent"
    },
    {
      "address": "0x1f7915Ed7A71275DF5A99646C1aab4b241d3f693",
      "txHash": "0x1b7b206267808a10907957d50ed69e4015dda281028b8b9bb1180bf4afb1487d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f25d7c6e51eeeb8b66fad58108ced8d7bebe0bfd5036b966684ee08d6fdd55b5": {
      "address": "0xC2778b51D5D620C8e2946A0d8D30e3b09176673c",
      "txHash": "0x383df0c40ba201beaa9aaca7c5a309a0406ce66f4cece739f8fd67ae4cb287da",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)9286_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)8581": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)8785": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)9008": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)628": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)9296_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)9291_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Refund))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)4389_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)9235_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)9296_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Refund)9291_storage)": {
            "label": "mapping(address => struct INftVault.Refund)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)4389_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)9235_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)9235_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)9296_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Refund)9291_storage": {
            "label": "struct INftVault.Refund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3917_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4389_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3917_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)9286_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)9235_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "refunds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)9291_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)9296_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)4389_storage))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)8581",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)628",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)9008",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)8785",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5ad740468e74b972dcb9204d3add45de3c023f380b8cfae1413894301edd7bc4": {
      "address": "0xfa679De341ECFbAF6FdD5c6B39A7050643d00588",
      "txHash": "0xe1a4fc0de0b32fed70e1c3224326332f000837aafb208978feca5879f5080bde",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)9286_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)8581": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)8785": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)9008": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)628": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)9296_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)9291_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Refund))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)4389_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)9235_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)9296_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Refund)9291_storage)": {
            "label": "mapping(address => struct INftVault.Refund)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)4389_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)9235_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)9235_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)9296_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Refund)9291_storage": {
            "label": "struct INftVault.Refund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3917_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4389_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3917_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)9286_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)9235_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "refunds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)9291_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)9296_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)4389_storage))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)8581",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)628",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)9008",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)8785",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e73d0ddf76eb826332b3c637ea21554917506742348fcb6e8fce0e4e1a5a6359": {
      "address": "0xA89479bf220C2FA8CCE0666300Bd82112033664a",
      "txHash": "0x60df7647a910e2fd45721d6d99fa48e23a427b389307f82d08cfd80580219d3b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)9286_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)8581": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)8785": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)9008": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)628": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)9296_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)9291_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Refund))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)4389_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)9235_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)9296_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Refund)9291_storage)": {
            "label": "mapping(address => struct INftVault.Refund)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)4389_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)9235_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)9235_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)9296_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Refund)9291_storage": {
            "label": "struct INftVault.Refund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3917_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4389_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3917_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)9286_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)9235_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "refunds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)9291_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)9296_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)4389_storage))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)8581",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)628",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)9008",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)8785",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a4e62c23bfcf59064325dbf849bf907cc03223f558cd8b71c93b1a3d76bf236d": {
      "address": "0x2Dbc3FECc66634860F4809cDe9900102582D8A56",
      "txHash": "0xfd5e18e819922d2a98a994a51c2f61fb8fea8d77fba04925f94af1b22167d57c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:18"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)19104",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:28"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:30"
          },
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:32"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(IBNFTRegistry)18142",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBNFTRegistry)18142": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)19104": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fecf03e5ff39c1e3ee5100bba45fbd97b9e26f604ec0ca628b6e6391a9c39960": {
      "address": "0xEC553663d527dC7D1Af7557ae0527c1F4AB84fe2",
      "txHash": "0xdf2520d67eb7e9a48b79edb6fb1bf348d71ee67d298a3d2456216ff3e8f600be",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:18"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)19104",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:28"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:30"
          },
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:32"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(IBNFTRegistry)18142",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBNFTRegistry)18142": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)19104": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a485f5704da88b2b631a989a91e6fb81db486c41951134e0ab47a068b3684cea": {
      "address": "0xc0C21A3a6FaB38714e4f5ED4924f86779aC5241A",
      "txHash": "0x2a54de8349f6d38ff5fb96b1cd4ebb1d72a16d7736edfd45d1b242dcf50eae24",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:18"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)19104",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:28"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:30"
          },
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:32"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(IBNFTRegistry)18142",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBNFTRegistry)18142": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)19104": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "76f053e2c59a3f96acbfad4c5e80b15f78cb90fec3eed1e908c38e0d96b16bfd": {
      "address": "0xBccC7a1E79215EC3FD36824615801BCeE0Df2eC3",
      "txHash": "0xbc1bf7d41287888a223f5908d3263898d6c1cb79659a37133100923c5871363c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IApeCoinStaking)18130",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:26"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IStakeManager)19398",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:28"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)18130": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)19398": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34993c67c2ee56f2d62f5fd3bbfb3424243e4970c7902299a45a143d57fbf5d9": {
      "address": "0x30d190032A34d6151073a7DB8793c01Aa05987ec",
      "txHash": "0x23941c6b8b217f181afc6e402f3a0571487f6312b7bf8f042fff94f0a0d4f99f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IApeCoinStaking)18130",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:24"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(PoolState)18614_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IStakeManager)19398",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ICoinPool)18270",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:31"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IBNFTRegistry)18142",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:32"
          },
          {
            "label": "v2AddressProvider",
            "offset": 0,
            "slot": "210",
            "type": "t_contract(IAddressProviderV2)18157",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:33"
          },
          {
            "label": "v2PoolManager",
            "offset": 0,
            "slot": "211",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:34"
          },
          {
            "label": "v2PoolLens",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IPoolLensV2)18190",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProviderV2)18157": {
            "label": "contract IAddressProviderV2",
            "numberOfBytes": "20"
          },
          "t_contract(IApeCoinStaking)18130": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)18142": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)18270": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolLensV2)18190": {
            "label": "contract IPoolLensV2",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)19398": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)19524": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)18614_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)18614_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)19524",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingApeCoin",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e59e5f62004445203beb27d0e6469a2bd696dc38ad07d1d8102ae602fc272790": {
      "address": "0x15596C27900e12A9cfC301248E21888751f61c19",
      "txHash": "0x41eddce257212a7c041b306b16ada6d48b1a9e1f1fe56e10d37dad9754360104",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)15301_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)18143": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)18283": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)18719": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)19117": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)19125": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)19537": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)19561": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)19125)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_struct(StakerStorage)15301_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)19125)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)19561",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)18143",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)1367",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)19117",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)18283",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)18719",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)19537",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)19537",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)19537",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              }
            ],
            "numberOfBytes": "576"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "faf648b95f35b7a31412e476ad356bef6762b67fe68619266d04335bb553f118": {
      "address": "0x1C9Ef41AC8aEC7Ec1A9F03e42AEcAF433629fEE6",
      "txHash": "0xef10fc45aac00ec821a15d377b1496a7678f4bf79351bb26a89ad8ea60f4afee",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IApeCoinStaking)4523",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:26"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IStakeManager)4897",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:28"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)4523": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)4897": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e60085896706d408611b2e9a0a4cdd24e4e1ad4db74c547bf35c46db87edcbda": {
      "address": "0x37A76Db446bDB3EF1b73112a8D5E6868de06464f",
      "txHash": "0x84a8611eea3adf5e68dc6c3f2c9eb1c12ca3da79f80e4fce146f738724460dfd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IApeCoinStaking)4531",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:26"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IStakeManager)4905",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:28"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)4531": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)4905": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bfb43e1e9de4307ffd024ff6129669a31d6dd600c31bad36baf8b006c9c9646a": {
      "address": "0xb0A1Df91157E08F63126Be78A722C096D857D7ce",
      "txHash": "0x2e2a913e2d6ff36d35a0ad4e7ec8758a84f9c94a5bf18b0fd841352ed00baf52",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IApeCoinStaking)4529",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:26"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IStakeManager)4903",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:28"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)4529": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)4903": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "357f1bf6891f5aa1b7a2b6c12bd4c67da5efed9db1b58aa605f5689e42bd7240": {
      "address": "0xFF613d2c5a53cEA3BeFd5C91CC306D215812aDfd",
      "txHash": "0x4d97641ade43c0d28142d97145a802ade6c38cacd2c0885d06c74e6332181199",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)19917_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)19208": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)19412": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)19635": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)19927_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)19922_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Refund))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)7376_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)19866_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)19927_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Refund)19922_storage)": {
            "label": "mapping(address => struct INftVault.Refund)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)7376_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)19866_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)19866_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)19927_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Refund)19922_storage": {
            "label": "struct INftVault.Refund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)6904_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)7376_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6904_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)19917_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)19866_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "refunds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)19922_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)19927_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)7376_storage))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)19208",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)1364",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)19635",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)19412",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "465fe437d63eed39aa278532b27d98a6632d24caf1d97911f816d32a6a2e0cec": {
      "address": "0x958f36955e10FFaa0aC92aA65acB30Ef6268421c",
      "txHash": "0x6cee39488db3419eb082d9ffb15e2ca419a4e401485267ebd446ad0e87bb8545",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3930",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:17"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)21781",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:18"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:21"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:24"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:29"
          },
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:31"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(IBNFTRegistry)20796",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBNFTRegistry)20796": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721MetadataUpgradeable)3930": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)21781": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "457ff9a24c50d15ccc1f83b7e92cf3fa0801d8fcb59c064b07d8551af26a5dc6": {
      "address": "0x179ab47Ab5980c70d4D08D54C47558bd8c3697B5",
      "txHash": "0xded52794078187670ffa687b6c01bbcb7f001a0aad6124a4e76ef1835cee9445",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3930",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:17"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)21781",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:18"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:21"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:24"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:29"
          },
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:31"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(IBNFTRegistry)20796",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBNFTRegistry)20796": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721MetadataUpgradeable)3930": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)21781": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ce94df08c3b436e48ebc14b1a5dbb0ea55666bb487ec9840167f12a78ed96a38": {
      "address": "0x3D8F428874a7fBde38a3EFBA48740bA6dD6E767f",
      "txHash": "0x1b82d240a41569b18f9a104e59f8ef92f0428ada3c365be7a4153adc0ee47b35",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3930",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:17"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)21781",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:18"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:21"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:24"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:29"
          },
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:31"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(IBNFTRegistry)20796",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBNFTRegistry)20796": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721MetadataUpgradeable)3930": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)21781": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9907d91e27c8e8c726c60f6e5701aa2bc3eb91a9fb51ba8d6ad865f81966915a": {
      "address": "0xd9E1e945e042fa29cD984cb0f280ae5Ce990D993",
      "txHash": "0x6a160233eb9a0a241391882f027353c0b0de6e107f732c99e9d34d9f2684769c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IApeCoinStaking)19208",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:24"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(PoolState)19692_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IStakeManager)20537",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ICoinPool)19348",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:31"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IBNFTRegistry)19220",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:32"
          },
          {
            "label": "v2AddressProvider",
            "offset": 0,
            "slot": "210",
            "type": "t_contract(IAddressProviderV2)19235",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:33"
          },
          {
            "label": "v2PoolManager",
            "offset": 0,
            "slot": "211",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:34"
          },
          {
            "label": "v2PoolLens",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IPoolLensV2)19268",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProviderV2)19235": {
            "label": "contract IAddressProviderV2",
            "numberOfBytes": "20"
          },
          "t_contract(IApeCoinStaking)19208": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)19220": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)19348": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolLensV2)19268": {
            "label": "contract IPoolLensV2",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)20537": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)20661": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)19692_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)19692_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)20661",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingApeCoin",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "408f7024ee808a83c525437df7a3b65c54e6b92bc005fcf54a8d1c834f50d852": {
      "address": "0x32B08f895d93a207e8A5C9405870D780A43b25Dd",
      "txHash": "0xc972bee29bd8b06d6a64a740e9763d217a090fc5027cc5491314d5952f35f498",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)16067_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)19208": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)19348": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)19788": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)20186": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)20194": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)20661": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)20685": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)20194)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_struct(StakerStorage)16067_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)20194)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)20685",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)19208",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)1364",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)20186",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)19348",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)19788",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)20661",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)20661",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)20661",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              }
            ],
            "numberOfBytes": "576"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2e6b6bed8edf2c8f416da2b89c54c43a7dd374f275ea72551a678d74ead7319c": {
      "address": "0x65fe0C8E9d18b4959BF7f49B63796Ba9f4F9a0fb",
      "txHash": "0xc81124c072e26883d957deba5ccacef3248f6c8bd86314142f6027557d24e9dc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)19597_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)18880": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)19095": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)19318": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)19602_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)7376_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)19549_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)19602_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)7376_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)19549_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)19549_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)19602_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)6904_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)7376_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6904_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)19597_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)19549_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)19602_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)7376_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)18880",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)1364",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)19318",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)19095",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "minGasFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "totalPendingFunds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "67fb27f770d2cb792ae40d0be3807a2318d5de2744ab69841f51db60745d724d": {
      "address": "0xE8636AFf2F1Cf508988b471d7e221e1B83873FD9",
      "txHash": "0xb8852cc1b67346225f7d7e2137b6b78cb6beaefde8c23cc49e0eaec586bba91f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IApeCoinStaking)18880",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:26"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IStakeManager)20165",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:28"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)18880": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)20165": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cd42a6df448b7c996e28e26730c200da207b410406890d25e8c48646c2c7c2d1": {
      "address": "0x812Fb40e8BE9a536c3864EaeB2264e702daC442A",
      "txHash": "0x1817010ee4e42664d6b4282db9c379cabe1455b7aa94cea0bee034891233fd8b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IApeCoinStaking)18880",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(PoolState)19375_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IStakeManager)20165",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ICoinPool)19031",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:31"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:32"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IBNFTRegistry)18892",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:33"
          },
          {
            "label": "v2AddressProvider",
            "offset": 0,
            "slot": "210",
            "type": "t_contract(IAddressProviderV2)18907",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:34"
          },
          {
            "label": "v2PoolManager",
            "offset": 0,
            "slot": "211",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:35"
          },
          {
            "label": "v2PoolLens",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IPoolLensV2)18940",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProviderV2)18907": {
            "label": "contract IAddressProviderV2",
            "numberOfBytes": "20"
          },
          "t_contract(IApeCoinStaking)18880": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)18892": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)19031": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolLensV2)18940": {
            "label": "contract IPoolLensV2",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)20165": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)20289": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)19375_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)19375_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)20289",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingApeCoin",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7369683fc6c0cfd71d474bb3a6d54a1181cc7d6dda1dbe36e62486d9c51c2934": {
      "address": "0xd85D35107682510b39610C1d23b85213aADb646b",
      "txHash": "0x38eed9add5b101daa9dd1d6bb7fea392b5948671cc3cd8ae290a3122c1a3b4d7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)16151_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)18880": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)19031": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)19471": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)19851": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)19859": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)20289": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)20313": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)19859)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingFund)16158_storage)": {
            "label": "mapping(address => struct BendStakeManager.PendingFund)",
            "numberOfBytes": "32"
          },
          "t_struct(PendingFund)16158_storage": {
            "label": "struct BendStakeManager.PendingFund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coinRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakerStorage)16151_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)19859)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)20313",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)18880",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)1364",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)19851",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)19031",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)19471",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)20289",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)20289",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)20289",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "pendingFunds",
                "type": "t_mapping(t_address,t_struct(PendingFund)16158_storage)",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "91bd935e2274c2015206fc974e06261a33aa24e97a1a341223e784ff681572e0": {
      "address": "0xE7E268cC1D025906fe8f6b076ecc40FF1a8dfA61",
      "txHash": "0xed3e5aa1eda7d3bcf1e611984827d19498671d941c791cc1b560d87b1f869991",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IApeCoinStaking)13811",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:26"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IStakeManager)15096",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:28"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)13811": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)15096": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a1c3ab5212a9a572e9813b658892f896ff00f287a6ea4139c91085570d0fcb29": {
      "address": "0x77a5612097A30F45c422af694a78Ba01F1973C9b",
      "txHash": "0x025ed4cbb167f9470fde043d2c9563f49d942d1f04a3ffaa32fe182264e5d115",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IApeCoinStaking)20784",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(PoolState)21282_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IStakeManager)22095",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ICoinPool)20938",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:31"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:32"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IBNFTRegistry)20796",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:33"
          },
          {
            "label": "v2AddressProvider",
            "offset": 0,
            "slot": "210",
            "type": "t_contract(IAddressProviderV2)20811",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:34"
          },
          {
            "label": "v2PoolManager",
            "offset": 0,
            "slot": "211",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:35"
          },
          {
            "label": "v2PoolLens",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IPoolLensV2)20844",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProviderV2)20811": {
            "label": "contract IAddressProviderV2",
            "numberOfBytes": "20"
          },
          "t_contract(IApeCoinStaking)20784": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)20796": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)20938": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolLensV2)20844": {
            "label": "contract IPoolLensV2",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)22095": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)22219": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)21282_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)21282_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)22219",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingApeCoin",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cd38e07b551a84603d7862ee53d58c8bb4d1ef9b54e725c94dc115a4ecf0867e": {
      "address": "0xc047D6fB1E03cA51189b46A3534dABd20315A94e",
      "txHash": "0x4002088a04e39afc3c723e94894c1ca4add254e94a90956fc6e98394dca0f425",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)4847_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)7592": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)7683": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)625": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)8123": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)8503": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)8511": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)8941": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)8965": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)8511)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingFund)4854_storage)": {
            "label": "mapping(address => struct BendStakeManager.PendingFund)",
            "numberOfBytes": "32"
          },
          "t_struct(PendingFund)4854_storage": {
            "label": "struct BendStakeManager.PendingFund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coinRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakerStorage)4847_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)8511)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)8965",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)7592",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)625",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)8503",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)7683",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)8123",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)8941",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)8941",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)8941",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "pendingFunds",
                "type": "t_mapping(t_address,t_struct(PendingFund)4854_storage)",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7cda9ebc66fd9eea18de8213289f2b49d0f3d1a48f17b292cb2ab5a1376648fe": {
      "address": "0x4e3A064eF42DD916347751DfA7Ca1dcbA49d3DA8",
      "txHash": "0xb626804eb057af25001c887c0f23558e032ffbbfe4104239df92acdf4e8d04f0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)2344_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)1931": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)1995": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)2218": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)451": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2349_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)2349_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)1406_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)2296_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)2296_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)2349_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)934_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)1406_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)934_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)2344_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2349_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)1931",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)451",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)2218",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)1995",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "minGasFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "totalPendingFunds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9e63cd62ba51ffe404eb64be65265e355b1e22ac7260643a978c56fb088c0d55": {
      "address": "0xa7076550Ee79DB0320BE98f89D775797D859140c",
      "txHash": "0x299e612edd78d0090072e65e875bee9109213b3a15b2da2e9db049f7ae802b1e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)2344_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)1931": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)1995": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)2218": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)451": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2349_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)2349_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)1406_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)2296_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)2296_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)2349_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)934_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)1406_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)934_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)2344_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2349_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)1931",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)451",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)2218",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)1995",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "minGasFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "totalPendingFunds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dda3897362ecd60fdbbdb45e1c72adaabaef53b881f68b14021d0feb08cbb795": {
      "address": "0x8F73BEebF3eF81F46651dDA10DC4FC18FDc740c9",
      "txHash": "0x2e8d15f2ffc19aff6814fc302cdb70b4cd931f16232500f575fc0380ab4e51e0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)4847_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)7609": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)7700": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)625": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)8140": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)8520": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)8528": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)8958": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)8982": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)8528)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingFund)4854_storage)": {
            "label": "mapping(address => struct BendStakeManager.PendingFund)",
            "numberOfBytes": "32"
          },
          "t_struct(PendingFund)4854_storage": {
            "label": "struct BendStakeManager.PendingFund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coinRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakerStorage)4847_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)8528)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)8982",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)7609",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)625",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)8520",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)7700",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)8140",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)8958",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)8958",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)8958",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "pendingFunds",
                "type": "t_mapping(t_address,t_struct(PendingFund)4854_storage)",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e2b0228c476498949c0938089fa0393baf426bf27e442081bd7ed1c3a857d6f6": {
      "address": "0xA897599f8dAf1170b6e1391f1De66f69BAB9617F",
      "txHash": "0x033b1553a8fe238277bac695eb81b5b8259687326c4e3d380859432d19b54646",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)4847_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)7632": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)7726": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)625": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)8166": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)8546": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)8554": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)8984": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)9008": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)8554)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingFund)4854_storage)": {
            "label": "mapping(address => struct BendStakeManager.PendingFund)",
            "numberOfBytes": "32"
          },
          "t_struct(PendingFund)4854_storage": {
            "label": "struct BendStakeManager.PendingFund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coinRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakerStorage)4847_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)8554)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)9008",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)7632",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)625",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)8546",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)7726",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)8166",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)8984",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)8984",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)8984",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "pendingFunds",
                "type": "t_mapping(t_address,t_struct(PendingFund)4854_storage)",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7d4f6a2579e46584cc8f9221b103faeef4fa89a2eae347c9dc4212b6d3a3280a": {
      "address": "0x297642D337EC625825feB175aAb4F968A35FFbEc",
      "txHash": "0xde4634665cee4fce4d7e1e72404e9095ef392380efdacbc2b3224374084700f4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IApeCoinStaking)4598",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:26"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IStakeManager)5006",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:28"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)4598": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)5006": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9741ebba7a6fc607a9de2a1f137b2935e46099c9c33cfc038f635635c7d7191c": {
      "address": "0x81eC1Ce37F206C9A3D0D6068Ab302b588045C336",
      "txHash": "0x8e7562f8df56d727d88f4fd8fb48bd629e432cd75a6488a2e32e8aed71b53a4b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IApeCoinStaking)4609",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:26"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)1364",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IStakeManager)5017",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:28"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)4609": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)5017": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e97b46d89c2c8383661a5d7e9f55d34eefbbf514f4781413058c905ec6fb1b10": {
      "address": "0x337035aFA98B3B552e714B04347f51968486706B",
      "txHash": "0x7c6fc4c403a810a6a6b8876d55f59207590ce584acda582189af2c2348ce49d8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)2344_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)1931": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)1995": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)2218": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)451": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2372_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)2372_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)1406_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)2296_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)2296_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)2372_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)934_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)1406_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)934_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)2344_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2372_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)1931",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)451",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)2218",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)1995",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "minGasFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "totalPendingFunds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a2da692b9998a988d77aab605803ac91b7d6135afccbc802be46694c7e126dee": {
      "address": "0x90d16aa9aC84b67A8A6a767981FD9541815f86Ff",
      "txHash": "0xe6ee6aa8cb48240fd57f81f3d2c61f7522ed35ee83ecb724dd6c8d3e466e18fd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)4891_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)7815": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)7909": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)625": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)8349": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)8752": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)8760": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)9190": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)9214": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)8760)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingFund)4898_storage)": {
            "label": "mapping(address => struct BendStakeManager.PendingFund)",
            "numberOfBytes": "32"
          },
          "t_struct(PendingFund)4898_storage": {
            "label": "struct BendStakeManager.PendingFund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coinRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakerStorage)4891_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)8760)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)9214",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)7815",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)625",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)8752",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)7909",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)8349",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)9190",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)9190",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)9190",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "pendingFunds",
                "type": "t_mapping(t_address,t_struct(PendingFund)4898_storage)",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "56a473c92582a72a69c122bf3c851e58e1d24573990a3b141b9fa89a37681f59": {
      "address": "0xcc5072E330ca37bAECFdA62C1E0E14c92903001a",
      "txHash": "0x905c8adee0ea16d964f73af55061f654042d5f2dce2c26061adcbad3b153b94d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)17853_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)20784": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)20938": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)21378": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)21781": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)21789": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)22219": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)22243": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)21789)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingFund)17860_storage)": {
            "label": "mapping(address => struct BendStakeManager.PendingFund)",
            "numberOfBytes": "32"
          },
          "t_struct(PendingFund)17860_storage": {
            "label": "struct BendStakeManager.PendingFund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coinRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakerStorage)17853_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)21789)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)22243",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)20784",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)1364",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)21781",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)20938",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)21378",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)22219",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)22219",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)22219",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "pendingFunds",
                "type": "t_mapping(t_address,t_struct(PendingFund)17860_storage)",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6778520a4ac39ed7026c7af3a3977a440e12db1e771017cfa0fdaa39e604950c": {
      "address": "0xDeEE93bD7302f59E4e6087f81EB8FD5c4D13dfcB",
      "txHash": "0x7483ee78e0512f1d885f5c0e29953934a73066c6ce80223e28879ce9df9ccba3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)2344_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)1931": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)1995": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)2218": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)451": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2372_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)2372_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)1406_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)2296_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)2296_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)2372_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)934_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)1406_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)934_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)2344_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2372_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)1931",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)451",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)2218",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)1995",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "minGasFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "totalPendingFunds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6324e8bb789745aae3b6d07f7f2c72d47a864ad87914ca7de8116a227f0dc265": {
      "address": "0x7A2113dF0cC592D8ed16a9a2CA7c7c4bd2CE2906",
      "txHash": "0x95510808ab73bbd4e938280f047246f84cdf0558caef18c3e121f84a6706b813",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)21504_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)20784": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)21002": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)21225": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)21532_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)7376_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)21456_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)21532_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)7376_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)21456_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)21456_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)21532_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)6904_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)7376_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6904_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)21504_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)21456_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)21532_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)7376_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)20784",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)1364",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)21225",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)21002",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "minGasFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "totalPendingFunds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "51c9f594e8467d062547b45a27d3446cbd8b9d0aba2ad8ed367505a32adc379e": {
      "address": "0x75De610912496247F085A499e8ea62Aaf8C76179",
      "txHash": "0x7b681f6f8f0d6de74f59576006b5ade11321173a6e54f79791a44f8b1440d614",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3930",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:17"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)21781",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:18"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:21"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:24"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:29"
          },
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:31"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(IBNFTRegistry)20796",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBNFTRegistry)20796": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721MetadataUpgradeable)3930": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)21781": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f27b727dd39cccaf69ba669f55418a9e906f24ce92e82fd15a3b0a9d2bbea6aa": {
      "address": "0xeC099722519dCe224Ad096781ba2791032003D3e",
      "txHash": "0x3ddbc56f7168166ca70ea68e0dbc93e1de6fb97f3501f29a0a8dfb7513a48646",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3930",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:17"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)21781",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:18"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:21"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:24"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:29"
          },
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:31"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(IBNFTRegistry)20796",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBNFTRegistry)20796": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721MetadataUpgradeable)3930": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)21781": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9ef7b891ca8a343cfdd9dd429c467ffd6fe5d18ef118b0592a5e96f6f21056e2": {
      "address": "0x95fbCe2C45a5f7689cEaC93B7BD24abc75dD1444",
      "txHash": "0x537f3400706bc9de115daa5c037049858bab1bb17cdce246a0643f4722fd5c5b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3930",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:17"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)21781",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:18"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:21"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:24"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:29"
          },
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:31"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "308",
            "type": "t_contract(IBNFTRegistry)20796",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBNFTRegistry)20796": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721MetadataUpgradeable)3930": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)21781": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "24e33bbc0a59a1b81c790d3f37ba4323a59ae0353a30725b91fc48b69205882b": {
      "address": "0x2ACBD4B295c632C839406075f2aaA5c132a0994C",
      "txHash": "0x2205e812e2446d5eebc3b74207303b47aaaa325d07896696a1a4fb310dfa3e38",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)4891_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)7927": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)8021": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)625": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)8461": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)8864": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)8872": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)9302": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)9326": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)8872)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingFund)4898_storage)": {
            "label": "mapping(address => struct BendStakeManager.PendingFund)",
            "numberOfBytes": "32"
          },
          "t_struct(PendingFund)4898_storage": {
            "label": "struct BendStakeManager.PendingFund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coinRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakerStorage)4891_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)8872)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)9326",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)7927",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)625",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)8864",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)8021",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)8461",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)9302",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)9302",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)9302",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "pendingFunds",
                "type": "t_mapping(t_address,t_struct(PendingFund)4898_storage)",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8d53643e874ae24f0e6393ca8f22186b388878ed675db7be6f27dc1aea0a3d16": {
      "address": "0xAc12293A2619E311ce3e82F68D929Fed1B733506",
      "txHash": "0x58abeeda0f013004eb755963010de63e5be5ec6d2286754bfb23773687fef727",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IApeCoinStaking)4015",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20Upgradeable)752",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(PoolState)4513_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IStakeManager)5326",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ICoinPool)4169",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:31"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:32"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IBNFTRegistry)4027",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:33"
          },
          {
            "label": "v2AddressProvider",
            "offset": 0,
            "slot": "210",
            "type": "t_contract(IAddressProviderV2)4042",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:34"
          },
          {
            "label": "v2PoolManager",
            "offset": 0,
            "slot": "211",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:35"
          },
          {
            "label": "v2PoolLens",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IPoolLensV2)4075",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProviderV2)4042": {
            "label": "contract IAddressProviderV2",
            "numberOfBytes": "20"
          },
          "t_contract(IApeCoinStaking)4015": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)4027": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)4169": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)752": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolLensV2)4075": {
            "label": "contract IPoolLensV2",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)5326": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)5450": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)4513_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)4513_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)5450",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingApeCoin",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "73ca3d2efca0032584572507ae5f62d2659ba6a4fbeeace2028f4499bd8e0ac9": {
      "address": "0x59fb4BA8077a86846924C82F084fb8aeE3875df2",
      "txHash": "0xaa89fb5cbea63134f3e83f2e881eb72a00ad9e9dac82422a9d74ab7e5c5aae8d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IApeCoinStaking)4035",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "wrapApeCoin",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20Upgradeable)752",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(PoolState)4533_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IStakeManager)5346",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ICoinPool)4189",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:31"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:32"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IBNFTRegistry)4047",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:33"
          },
          {
            "label": "v2AddressProvider",
            "offset": 0,
            "slot": "210",
            "type": "t_contract(IAddressProviderV2)4062",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:34"
          },
          {
            "label": "v2PoolManager",
            "offset": 0,
            "slot": "211",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:35"
          },
          {
            "label": "v2PoolLens",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IPoolLensV2)4095",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProviderV2)4062": {
            "label": "contract IAddressProviderV2",
            "numberOfBytes": "20"
          },
          "t_contract(IApeCoinStaking)4035": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)4047": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)4189": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)752": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPoolLensV2)4095": {
            "label": "contract IPoolLensV2",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)5346": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)5470": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)4533_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)4533_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)5470",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingApeCoin",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e9a1f6bc34824953a746d155ce573e60fea847a091cd5c11e207ae76f08a79d5": {
      "address": "0xef7b0900A2a5557c8F88756Af6A772b28894Cd91",
      "txHash": "0xf88dbb470d0ccfd42271b865c44baef8da85ae0e61accc22d38607beb7ed1dce",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)21578_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)20858": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)21076": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)21299": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1364": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)21606_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)7376_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)21530_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)21606_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)7376_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)21530_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)21530_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)21606_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)6904_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)7376_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6904_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)21578_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)21530_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)21606_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)7376_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)20858",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)1364",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)21299",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)21076",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "minGasFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "totalPendingFunds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "96960a18979e1fe00d7c8355adaef25da6ba7bf2d8483f700743dc5121e64f36": {
      "address": "0x5cFca438356c6b39A12ed631bFD6774214680A04",
      "txHash": "0x84e2be5fa120b2d6d3a01d7edb53add4bad675b026ea154bc98398e5cee3d26c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)2350_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)1931": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)1995": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)2218": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)451": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2378_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)2378_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)1406_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int256)": {
            "label": "mapping(uint256 => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_int256))": {
            "label": "mapping(uint256 => mapping(uint256 => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)2296_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)2296_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)2378_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)934_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)1406_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)934_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)2350_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2378_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)1931",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)451",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)2218",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)1995",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "minGasFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "totalPendingFunds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "pendingClaimRewardsDebts",
                "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_int256))",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "28356d3530d980317049f80910fdfcc0f682ab310caf29bfd0c2c9cb763f59e6": {
      "address": "0x0f0157F342Db1712A41bAF82130fA76a9B1D324E",
      "txHash": "0x6f6380a1eb8877e81dc6453b98a30219c5b70d8e66782a1c096727a0fdb050f4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)2350_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)1931": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegateRegistryV2)1995": {
            "label": "contract IDelegateRegistryV2",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)2218": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)451": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2378_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)2378_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)1406_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_int256)": {
            "label": "mapping(uint256 => int256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_int256))": {
            "label": "mapping(uint256 => mapping(uint256 => int256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)2296_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)2296_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)2378_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)934_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)1406_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)934_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)2350_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)2296_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)2378_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)1406_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)1931",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)451",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)2218",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "authorized",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "delegationRegistryV2",
                "type": "t_contract(IDelegateRegistryV2)1995",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "minGasFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "totalPendingFunds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "pendingClaimRewardsDebts",
                "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_int256))",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "79ce99b748838385ac2a6a99a98c36d64abbf01520e226a836d0f7e1c9d7fe8e": {
      "address": "0xC8f30Fd27e6714Cb3a393c1B14956098330E5B9b",
      "txHash": "0x8bea7cc78fb7679069e7950f0a2be80e808cbf88d4299881af09e5dc9b2e954b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)4891_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)7863": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)7957": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)625": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)8397": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)8806": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)8814": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)9244": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)9268": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)8814)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingFund)4898_storage)": {
            "label": "mapping(address => struct BendStakeManager.PendingFund)",
            "numberOfBytes": "32"
          },
          "t_struct(PendingFund)4898_storage": {
            "label": "struct BendStakeManager.PendingFund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coinRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakerStorage)4891_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)8814)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)9268",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)7863",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)625",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)8806",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)7957",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)8397",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)9244",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)9244",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)9244",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "pendingFunds",
                "type": "t_mapping(t_address,t_struct(PendingFund)4898_storage)",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9b49505de4453ca28b4be28ea614ace8a4ff99991aa7387af85acea36c762e93": {
      "address": "0xE63eC0d0b462749bd4DDC5101026de10225A19d4",
      "txHash": "0xc407b170f101b9488b2ee10e808984de9d55e5c789ad6a359d1fe351022a92c0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)4891_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)7877": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)7971": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)625": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)8411": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)8820": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)8828": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)9258": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)9282": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)8828)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PendingFund)4898_storage)": {
            "label": "mapping(address => struct BendStakeManager.PendingFund)",
            "numberOfBytes": "32"
          },
          "t_struct(PendingFund)4898_storage": {
            "label": "struct BendStakeManager.PendingFund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coinRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakerStorage)4891_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)8828)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)9282",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)7877",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "wrapApeCoin",
                "type": "t_contract(IERC20Upgradeable)625",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)8820",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)7971",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)8411",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)9258",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)9258",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)9258",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "pendingFunds",
                "type": "t_mapping(t_address,t_struct(PendingFund)4898_storage)",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
